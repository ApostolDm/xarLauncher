name: Build/release

on: 
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2022]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # костыль: electron-builder ищет /usr/bin/python на macOS
      - name: Add python symlink (for macOS)
        if: runner.os == 'macOS'
        run: sudo ln -s $(which python3) /usr/local/bin/python || true

      - name: Build macOS app
        if: runner.os == 'macOS'
        run: yarn build-mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Windows app
        if: runner.os == 'Windows'
        run: yarn build-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux app
        if: runner.os == 'Linux'
        run: yarn build-linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Автопубликация релиза при запуске по тегу
      - name: Release artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: true

      # ✅ Загрузка артефактов при обычном запуске
      - name: Upload build artifacts
        if: startsWith(github.ref, 'refs/tags/v') == false
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ runner.os }}
          path: dist/**
